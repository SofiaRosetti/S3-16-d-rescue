buildscript {

    repositories {
        jcenter()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:${gradleVersion}"
    }

}

apply plugin: 'com.android.application'

dependencies {
    compile "com.android.support.constraint:constraint-layout:${constraintLayoutVersion}"
}

android {
    compileSdkVersion androidCompileSdkVersion.toInteger()
    buildToolsVersion "${androidBuildToolsVersion}"

    defaultConfig {
        applicationId "${androidArtifactId}"
        minSdkVersion androidMinSdkVersion.toInteger()
        targetSdkVersion androidTargetSdkVerision.toInteger()
        versionCode androidVersionCode.toInteger()
        versionName "${androidVersionName}"

        jackOptions {
            enabled true
        }

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    repositories {
        maven {
            url "https://maven.google.com"
        }
    }

    dependencies {
        compile fileTree(dir: 'libs', include: ['*.jar'])
        androidTestCompile("com.android.support.test.espresso:espresso-core:${espressoVersion}", {
            exclude group: 'com.android.support', module: 'support-annotations'
        })
        compile "com.android.support:appcompat-v7:${appCompatV7Version}"
        compile "com.android.support:cardview-v7:${cardviewV7Version}"
        compile "com.android.support:recyclerview-v7:${recyclerviewV7Version}"
        compile "com.android.support.constraint:constraint-layout:${constraintLayoutVersion}"
        compile "junit:junit:${junitVersion}"

        compile "com.rengwuxian.materialedittext:library:${materialedittextVersion}"
        compile "com.google.code.gson:gson:${gsonVersion}"

        compile project(':utils-java')
    }
}

android.applicationVariants.all { variant ->
    task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
        description "Generates Javadoc for $variant.name."
        source = variant.javaCompile.source
        ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
        options.links("http://docs.oracle.com/javase/7/docs/api");
        options.links("http://d.android.com/reference/");
    }
}